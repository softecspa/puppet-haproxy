global
    log <%= scope.lookupvar('haproxy::logserver') -%> <%= scope.lookupvar('haproxy::syslog_facility') %>
    stats socket <%= scope.lookupvar('haproxy::params::sock') %> user <%= scope.lookupvar('haproxy::user') -%> group <%= scope.lookupvar('haproxy::group') -%> mode 0644 level admin
    maxconn <%= scope.lookupvar('haproxy::global_maxconn') %>
    user <%= scope.lookupvar('haproxy::user') %>
    group <%= scope.lookupvar('haproxy::group') %>
    daemon

defaults
    log global
    mode <%= scope.lookupvar('haproxy::default_mode') %>
<% scope.lookupvar('haproxy::array_options').each do |option| -%>
<% if option != '' -%>
    option <%= option %>
<% end -%>
<% end -%>
    retries <%= scope.lookupvar('haproxy::retries') %>
    maxconn <%= scope.lookupvar('haproxy::frontend_maxconn') %>
    timeout connect  <%= scope.lookupvar('haproxy::connect_timeout') %>   #Maximum time to wait for a connection attempt to a server to succeed
    timeout client <%= scope.lookupvar('haproxy::client_timeout') %>    #Maximum inactivity time on the client side
    timeout server <%= scope.lookupvar('haproxy::server_timeout') %>    #Maximum inactivity time on the server side.

<% if scope.lookupvar('haproxy::enable_stats') == true -%>
listen stats :<%= scope.lookupvar('haproxy::stats_port') %>
    mode http
    stats enable
<% if scope.lookupvar('haproxy::stats_hide') == true -%>
    stats hide-version
<% end -%>
    stats realm <%= scope.lookupvar('haproxy::stats_realm') %>
    stats uri <%= scope.lookupvar('haproxy::stats_uri') %>
    stats auth <%= scope.lookupvar('haproxy::stats_user') -%>:<%= scope.lookupvar('haproxy::stats_pass') %>
<% end -%>
